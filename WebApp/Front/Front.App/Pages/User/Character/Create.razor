@page "/User/Character/Create"
@using Server.Entities
@using Server.Entities.Common.Characters
@inject CharacterService CharacterService
@inject AuthService AuthService


<MudText Typo="Typo.h4">Create you character</MudText>
<EditForm Model="@Character" OnValidSubmit="CreateCharacter">
    <div class="form-group mt-2">
        <MudTextField T="string"
                      @bind-Value="@Character.Name"
                      Variant="Variant.Outlined"
                      ShrinkLabel="true"
                      InputType="InputType.Text"
                      Label="Name"
                      Required="true"
                      RequiredError="Name for Character is required!" />
    </div>

    <div class="form-group mt-2">
        <MudSelect T="Gender" @bind-Value="@Character.Gender" Label="Gender" Required="true">
            <MudSelectItem  Value="@((int)Gender.Male)">Male</MudSelectItem>
            <MudSelectItem  Value="@((int)Gender.Female)">Female</MudSelectItem>
        </MudSelect>
    </div>

    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">
        Submit
    </MudButton>

    <DataAnnotationsValidator />
    <ValidationSummary />
</EditForm>


@code {
    private Character? Character { get; set; } = new Character();

    private async Task CreateCharacter()
    {
        await CharacterService.CreateCharacter(this.Character);
    }
}
