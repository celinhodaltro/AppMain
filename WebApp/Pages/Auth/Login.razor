@page "/login/"

@inject NavigationManager NavigationManager
@inject AuthService AuthService

@code {
    private User loginModel = new();
    String RepeatPasssword = "";
    bool ShowErrors = false;
    string Error = String.Empty;

    private async Task HandleLogin()
    {
        try
        {
            ShowErrors = false;
            var result = await AuthService.Login(loginModel);

            if(result.Token is not null)
            {
                NavigationManager.NavigateTo("/");
            }
            else
            {
                ShowErrors = true;
            }
        }
        catch (Exception ex)
        {
            Error = "Não foi possivel fazer o Login:" + ex.Message;
            ShowErrors = true;
        }

    }
}

@if(ShowErrors)
{
    <p>@Error</p>
}


<div class="card">
    <div class="card-body">
        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator/>
            <ValidationSummary/>

            <div class="form-group mt-2"> 
                <label for="email">Email</label>
                <InputText class="form-control" id="email" @bind-Value="loginModel.Email" />
                <ValidationMessage For="@(() => loginModel.Email)" />
            </div>

            <div class="form-group mt-2">
                <label for="email">Password</label>
                <InputText class="form-control" id="Password" @bind-Value="loginModel.Password" />
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>

            <div class="form-group mt-2">
                <label for="email">Repeat Passsword</label>
                <InputText class="form-control" id="RepeatPasssword" @bind-Value="RepeatPasssword" />
            </div>

            <button type="submit" class="btn btn-primaty"></button>
        </EditForm>
    </div>
</div>


